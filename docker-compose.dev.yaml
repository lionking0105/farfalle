services:
  backend:
    depends_on:
      - postgres
      - searxng
    build:
      context: .
      dockerfile: ./src/backend/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      - OLLAMA_API_BASE=${OLLAMA_API_BASE:-http://host.docker.internal:11434}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - BING_API_KEY=${BING_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ENABLE_LOCAL_MODELS=${ENABLE_LOCAL_MODELS:-True}
      - SEARCH_PROVIDER=${SEARCH_PROVIDER:-searxng}
      - SEARXNG_BASE_URL=${SEARXNG_BASE_URL:-http://searxng:8080}
      - CUSTOM_MODEL=${CUSTOM_MODEL}
      - REDIS_URL=${REDIS_URL}
      - DB_ENABLED=${DB_ENABLED:-True}
      - POSTGRES_HOST=postgres
    entrypoint: >
      /bin/sh -c "
        cd /workspace/src/backend &&
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000
      "
    develop:
      watch:
        - action: sync
          path: ./src/backend
          target: /workspace/src/backend
    networks:
      - farfalle-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    depends_on:
      - backend
    build:
      context: .
      dockerfile: ./src/frontend/Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
        - NEXT_PUBLIC_LOCAL_MODE_ENABLED=${NEXT_PUBLIC_LOCAL_MODE_ENABLED:-true}
        - NEXT_PUBLIC_PRO_MODE_ENABLED=${NEXT_PUBLIC_PRO_MODE_ENABLED:-true}
    restart: always
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./src/frontend
          target: /app
          ignore:
            - node_modules/
    networks:
      - farfalle-network

  searxng:
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./searxng:/etc/searxng:rw
    networks:
      - farfalle-network

  postgres:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - farfalle-network

networks:
  farfalle-network:
    name: farfalle-network

volumes:
  db_volume:
